[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"workshop necessary work prep tasks ensure ready go.currently R RStudio installed, please work Chapter 1.R /RStudio installed, please skip Section  1.4 update latest version workshop.technical issues install R RStudio machine (e.g., admin rights), please sign-RStudio Cloud account.done one , work Chapter 2 introduce basic programming terminology install packages need workshop. Depending upon familiarity R, take 1-2 hours.Regardless set-need , join workshop, please ensure completed Workshop Set-Check Chapter 2.9. works, good go.materials workshop adapted :Nordmann, E. & DeBruine, L. (2022). Applied Data Skills (1.0). Zenodo. https://doi.org/10.5281/zenodo.6365078Nordmann, E. & DeBruine, L. (2022). Applied Data Skills (1.0). Zenodo. https://doi.org/10.5281/zenodo.6365078Nordmann, E., McAleer, P., Toivo, W., Paterson, H. & DeBruine, L. (accepted). Data visualisation using R, researchers use R. Advances Methods Practices Psychological Science.Nordmann, E., McAleer, P., Toivo, W., Paterson, H. & DeBruine, L. (accepted). Data visualisation using R, researchers use R. Advances Methods Practices Psychological Science.","code":""},{"path":"installing-r.html","id":"installing-r","chapter":"1 Installing R","heading":"1 Installing R","text":"Installing R RStudio usually straightforward. sections explain helpful YouTube video . run serious difficulties (example admin rights machine), purposes workshop recommend using RStudio Cloud time trouble-shoot complex installation issues.","code":""},{"path":"installing-r.html","id":"installing-base-r","chapter":"1 Installing R","heading":"1.1 Installing Base R","text":"Install base R. Choose download link operating system (Linux, Mac OS X, Windows).Mac, install latest release newest R-x.x.x.pkg link (legacy version older operating system). may also need install XQuartz able use visualisation packages.installing Windows version, choose \"base\" subdirectory click download link top page.using Linux, choose specific operating system follow installation instructions.","code":""},{"path":"installing-r.html","id":"installing-rstudio","chapter":"1 Installing R","heading":"1.2 Installing RStudio","text":"Go rstudio.com download RStudio Desktop (Open Source License) version operating system list titled Installers Supported Platforms.","code":""},{"path":"installing-r.html","id":"installing-rtools","chapter":"1 Installing R","heading":"1.3 Installing RTools","text":"using Windows, install R, also install RTools; use \"recommended\" version highlighted near top list. RTools used installing loading packages. can get started without installing RTools, problems installing loading packages, first thing try.RTools require put \"PATH\". instructions can seem bit vague - easiest way open RStudio, run code console:done , restart R clicking Session - Restart R run code console give path RTools installation:","code":"\nwrite('PATH=\"${RTOOLS40_HOME}\\\\usr\\\\bin;${PATH}\"', file = \"~/.Renviron\", append = TRUE)\nSys.which(\"make\")##                               make \n## \"C:\\\\rtools40\\\\usr\\\\bin\\\\make.exe\""},{"path":"installing-r.html","id":"rstudio-settings","chapter":"1 Installing R","heading":"1.4 RStudio Settings","text":"settings fix immediately updating RStudio. Go Global Options... Tools menu (⌘,), General tab, uncheck box says Restore .RData workspace startup. keep things around workspace, things get messy, unexpected things happen. always start clear workspace. also means never want save workspace exit, set Never. thing want save scripts.may also want change appearance code. Different fonts themes can sometimes help visual difficulties dyslexia.\nFigure 1.1: RStudio General Appearance settings\nmay also want change settings Code tab. example, Lisa DeBruine prefers two spaces instead tabs code likes able see whitespace characters. matter personal preference.\nFigure 1.2: RStudio Code settings\n","code":""},{"path":"installing-r.html","id":"installing-latex","chapter":"1 Installing R","heading":"1.5 Installing LaTeX","text":"can install LaTeX typesetting system produce PDF reports RStudio. Without additional installation, able produce reports HTML PDF. generate PDF reports, additionally need install tinytex (Xie, 2022) run following code:","code":"\n# run this in the console\ninstall.packages(\"tinytex\")\ntinytex::install_tinytex()"},{"path":"installing-r.html","id":"updating-r","chapter":"1 Installing R","heading":"1.6 Updating R, RStudio, and packages","text":"time--time, updated versions R, RStudio, packages use (e.g., ggplot) become available. Remember separate, different process come different considerations. recommend updating latest version start new project. definitely recommend updating middle project middle semester bring advice based personal experience pain.","code":""},{"path":"installing-r.html","id":"updating-rstudio","chapter":"1 Installing R","heading":"1.7 Updating RStudio","text":"RStudio easiest component update. Typically, updates RStudio affect code, instead add new features, like spell-check upgrades RStudio can . usually little downside updating RStudio easy .Click Help - Check updates\nFigure 1.3: Updating RStudio\nupdate available, prompt download can install usual.","code":""},{"path":"installing-r.html","id":"updating-r-1","chapter":"1 Installing R","heading":"1.8 Updating R","text":"Finally, may also wish update R . key thing aware update R, just download latest version website, lose packages.","code":""},{"path":"installing-r.html","id":"windows","chapter":"1 Installing R","heading":"1.8.1 Windows","text":"easiest way update R Windows cause huge headache use installr package. use updateR() function, series dialogue boxes appear. fairly self-explanatory full step--step guide available use installr, important bit select \"Yes\" asked like copy packages older version R.","code":"\n# Install the installr package\ninstall.packages(\"installr\")\n\n# Run the update function\ninstallR::updateR()"},{"path":"installing-r.html","id":"mac","chapter":"1 Installing R","heading":"1.8.2 Mac","text":"Mac, can use updateR package. need install GitHub. asked type system password (use log computer) console pane. relevant, ask want restore packages new major version.","code":"\n# install from github\ndevtools::install_github(\"AndreaCirilloAC/updateR\")\n\n# update your R version, you will need your system password\nupdateR::updateR()"},{"path":"installing-r.html","id":"updating-packages","chapter":"1 Installing R","heading":"1.9 Updating packages","text":"completely new R installed packages yet, section make great deal sense, just remember can come back future.Package developers occasionally release updates packages. typically add new functions package, fix amend existing functions. aware package updates may cause previous code stop working. tend happen minor updates packages, occasionally major updates, can serious issues developer made fundamental changes code works. reason, recommend updating packages beginning academic year (semester) - assessment deadline just case!update individual package, easiest way use install.packages() function, always installs recent version package.update multiple packages, indeed packages, RStudio provides helpful tools. Click Tools - Check Package Updates. dialogue box appear can select packages wish update. aware select packages, may take time unable use R whilst process completes.\nFigure 1.4: Updating packages RStudio\n","code":"\ninstall.packages(\"tidyverse\")"},{"path":"installing-r.html","id":"package-install-troubleshooting","chapter":"1 Installing R","heading":"1.10 Troubleshooting","text":"Occasionally, might problem packages seemingly refuse update install. Emily, rlang vctrs cause end trouble. packages likely every explicitly load, required beneath surface R things like knit Markdown files etc.","code":""},{"path":"installing-r.html","id":"non-zero-exit-status","chapter":"1 Installing R","heading":"1.10.1 Non-zero exit status","text":"try update package get error message says something like Warning install.packages : installation package ‘vctrs’ non-zero exit status perhaps Error loadNamespace(, c(lib.loc, .libPaths()), versionCheck = vI[[]]) :  namespace 'rlang' 0.4.9 loaded, >= 0.4.10 required one solution found manually uninstall package, restart R, install package new, rather trying update existing version. installr package also useful function uninstalling packages.","code":"\n# Load installr\nlibrary(installr)\n\n# Uninstall the problem package\nuninstall.packages(\"package_name\")\n\n# Then restart R using session - restart R\n# Then install the package fresh\n\ninstall.packages(\"package\")"},{"path":"installing-r.html","id":"cannot-open-file","chapter":"1 Installing R","heading":"1.10.2 Cannot open file","text":"may get following error trying install packages :Error install packages : open file 'C:/.....': Permission deniedThis usually indicates permissions problem writing default library (folder packages kept ). Sometimes means need install R RStudio administrator run administrator.One fix may change library location using following code (check \"C:/Program Files/R\" version instead \"R-3.5.2\"):works can install packages, set library path permanently:Install usethis packageRun usethis::edit_r_profile() console; open blank filePaste file (version ): .libPaths(c(\"C:/Program Files/R/R-3.5.2/library\"))Save close fileRestart R changes take effectThe code .Rprofile now run every time start R.","code":"\n# change the library path\n.libPaths(c(\"C:/Program Files/R/R-3.5.2/library\"))"},{"path":"intro.html","id":"intro","chapter":"2 Intro to R and RStudio","heading":"2 Intro to R and RStudio","text":"","code":""},{"path":"intro.html","id":"ilo-intro","chapter":"2 Intro to R and RStudio","heading":"2.1 Intended Learning Outcomes","text":"Install R RStudioBe able install add-packagesBe able get help packages functionsBe able create objects writing running code consolePlease note completely new R, expect fully understand everything chapter. Almost concepts explained workshop feel comfortable continued practice. However, first workshop session particular run much smoother familiarity basics.Download RStudio IDE Cheatsheet.","code":""},{"path":"intro.html","id":"intro-r-rstudio","chapter":"2 Intro to R and RStudio","heading":"2.2 R and RStudio","text":"R programming language write code RStudio Integrated Development Environment (IDE) makes working R easier. Think knowing English using plain text editor like NotePad write book versus using word processor like Microsoft Word. , much harder without things like spell-checking formatting able use advanced features Word developed. similar way, can use R without R Studio recommend . RStudio serves text editor, file manager, spreadsheet viewer, . key thing remember although work using RStudio workshop, actually using two pieces software means time--time, may separate updates.","code":""},{"path":"intro.html","id":"rstudio_ide","chapter":"2 Intro to R and RStudio","heading":"2.2.1 RStudio","text":"installed R, gave computer ability process R programming language, also installed app called \"R\". never use app. Instead, use RStudio. RStudio arranged four window panes.\nFigure 2.1: RStudio IDE\ndefault, upper left pane source pane, view, write, edit code files view data tables spreadsheet format. first open RStudio, pane display open document load data - worry, get soon.lower left pane console pane, can type commands view output messages. can write code console test . code run can create objects environment, code saved. need write code script source pane save .right panes several different tabs show information code. used tabs upper right pane Environment tab Help tab. environment tab lists information objects defined code. learn Help tab Section 2.6.3.lower right pane, used tabs Files tab directory structure, Plots tab plots made script, Packages tab managing add-packages (see Section 2.5), Viewer tab display reports created scripts. can change location panes tabs shown Preferences > Pane Layout.","code":""},{"path":"intro.html","id":"intro-reproducibility","chapter":"2 Intro to R and RStudio","heading":"2.2.2 Reproducibility","text":"One main reasons learn R can create reproducible reports. involves writing scripts transform data, create summaries visualisations, embed report way always gives results.things reproducibly, others (future ) can understand check work. can also reuse work easily. example, need create exam board report every semester student grades, reproducible report allows download new data create report within seconds. might take little longer set report first instance reproducible methods, time saves long run invaluable.Section 1.4 shows change two important settings global Options increase reproducibility. settings :Restore .RData workspace startup: CheckedNot CheckedSave workspace .RData exit: AlwaysNeverAsk","code":""},{"path":"intro.html","id":"themes-and-accessiblilty","chapter":"2 Intro to R and RStudio","heading":"2.2.3 Themes and accessiblilty","text":"can customise R Studio looks make work . Click Tools - Global Options - Appearance. can change default font, font size, general appearance R Studio, including using dark mode. Play around settings see prefer - going spend lot time R, might well look nice!","code":""},{"path":"intro.html","id":"intro-sessions","chapter":"2 Intro to R and RStudio","heading":"2.3 Sessions","text":"settings configured correctly, open RStudio start writing code, loading packages, creating objects, new session Environment tab completely empty. find code working figure , might worth restarting R session. clear environment detach loaded packages - think like restarting phone. several ways can restart R:Menu: Session > Restart RCmd-Shift-F10 Ctl-Shift-F10type .rs.restartR() consoleTry now. Additionally, now good time create notebook can keep record useful hints tips things try code working. Add \"restart R session\" notebook first item.","code":""},{"path":"intro.html","id":"functions","chapter":"2 Intro to R and RStudio","heading":"2.4 Functions","text":"install R access range functions including options data wrangling statistical analysis. functions included default installation typically referred base R can think like default apps come pre-loaded phone.function name refers code can reuse. using functions provided packages, can also write functions.type function console pane, run soon hit enter. put function script R Markdown document source pane, run run script, knit R Markdown file, run code chunk. learn workshop.example, function sum() included base R, expect. console, run code:","code":"\nsum(1,2,3)## [1] 6"},{"path":"intro.html","id":"packages","chapter":"2 Intro to R and RStudio","heading":"2.5 Packages","text":"One great things R, however, user extensible: anyone can create new add-extends functionality. currently thousands packages R users created solve many different kinds problems, just simply fun. example, packages data visualisation, machine learning, interactive dashboards, web scraping, playing games Sudoku.Add-packages distributed base R, downloaded installed archive, way , instance, download install PokemonGo smartphone. main repository packages reside called CRAN, Comprehensive R Archive Network.important distinction installing package loading package.","code":""},{"path":"intro.html","id":"install-package","chapter":"2 Intro to R and RStudio","heading":"2.5.1 Installing a package","text":"done using install.packages(). like installing app phone: app remain installed remove . instance, want use PokemonGo phone, install App Store Play Store; re-install time want use . launch app, run background close restart phone. Likewise, install package, package available (loaded) every time open R.Install tidyverse package system. package main package use throughout book data wrangling, summaries, visualisation.get message says something like package ‘tidyverse’ successfully unpacked MD5 sums checked, installation successful. get error package installed, check troubleshooting section Appendix 1.10.Never install package inside script. console pane.can also install multiple packages . command install packages using workshop.devtools package, can also install packages repositories CRAN, github. following code installs development version package making waffle plots.","code":"\n# type this in the console pane\ninstall.packages(\"tidyverse\")\npackages <- c(\n  \"tidyverse\",  # for everything\n  \"patchwork\",  # for multi-part plots\n  \"ggthemes\",   # for themed plots\n  \"devtools\"    # for installing github packages\n)\n\n# determine which need to be installed\nnew_packages <- packages[!packages %in% installed.packages()]\n\ninstall.packages(new_packages)\n# install waffle package \ndevtools::install_github(\"hrbrmstr/waffle\")"},{"path":"intro.html","id":"loading-a-package","chapter":"2 Intro to R and RStudio","heading":"2.5.2 Loading a package","text":"done using library() function. like launching app phone: functionality app launched remains close app restart. example, run library(patchwork) within session, functions package referred patchwork made available R session. next time start R, need run library(patchwork) want access package.installing thetidyverse package, can load current R session follows:might get red text load package, normal. usually warning package functions name packages already loaded.can use convention package::function() indicate add-package function resides. instance, see readr::read_csv(), refers function read_csv() readr add-package. package loaded using library(), specify package name function unless conflict (e.g., two packages loaded function name).","code":"\nlibrary(tidyverse)"},{"path":"intro.html","id":"tidyverse","chapter":"2 Intro to R and RStudio","heading":"2.5.3 Tidyverse","text":"tidyverseis meta-package loads several packages incredibly useful cleaning, processing, summarising, visualising almost type data:ggplot2, data visualisationreadr, data importtibble, tablestidyr, data tidyingdplyr, data manipulationstringr, stringsforcats, factorspurrr, repeating things","code":""},{"path":"intro.html","id":"using-functions","chapter":"2 Intro to R and RStudio","heading":"2.6 Using functions","text":"","code":""},{"path":"intro.html","id":"arguments","chapter":"2 Intro to R and RStudio","heading":"2.6.1 Arguments","text":"functions allow/require specify one morearguments. options can set. can look arguments/options function using help documentation. arguments required, optional. Optional arguments often use default (normally specified help documentation) enter value.example, look help documentation function sample() randomly samples items list.help documentation sample() appear bottom right help panel. usage section, see sample() takes following form:arguments section, explanations arguments. x list items want choose , size number items want choose, replace whether item may selected , prob gives probability item chosen. details section notes values entered replace prob use defaults FALSE (item can chosen ) NULL (items equal probability chosen). default value x size, must specified otherwise code run.try example just change required arguments x size ask R choose 5 random letters (letters built-vector 26 lower-case Latin letters).sample() generates random sample. time run code, generate different set random letters (try ). function set.seed() controls random number generator - using functions use randomness (sample()), running set.seed() ensure get result (many cases may want ). get numbers , run set.seed(1242016) console, run sample(x = letters, size = 5) .Now can change default value replace argument produce set letters allowed duplicates.time R still produced 5 random letters, now set letters two instances \"k\". Always remember use help documentation help understand arguments function requires.","code":"\n?sample\nsample(x, size, replace = FALSE, prob = NULL)\nsample(x = letters, size = 5)## [1] \"z\" \"v\" \"y\" \"w\" \"j\"\nset.seed(8675309)\nsample(x = letters, size = 5, replace = TRUE)## [1] \"t\" \"k\" \"j\" \"k\" \"m\""},{"path":"intro.html","id":"argument-names","chapter":"2 Intro to R and RStudio","heading":"2.6.2 Argument names","text":"examples, written argument names code (.e., x, size, replace), however, strictly necessary. following two lines code produce result (although time run sample() produce slightly different result, random, still work ):Importantly, write argument names, R use default order arguments. sample assume first value enter x. second value size third value replace.write argument names can write arguments whatever order like:first learning R, may find useful write argument names can help remember understand part function . However, skills progress may find quicker omit argument names also see examples code online use argument names, important able understand argument bit code referring (look help documentation check).workshop, always write argument names first time use function. However, subsequent uses may omitted.","code":"\nsample(x = letters, size = 5, replace = TRUE)\nsample(letters, 5, TRUE)\nsample(size = 5, replace = TRUE, x = letters)"},{"path":"intro.html","id":"function-help","chapter":"2 Intro to R and RStudio","heading":"2.6.3 Function help","text":"load tidyverse automatically loads packages, however, can helpful know package function comes need Google . function base R loaded package, can type ?function_name console access help file. top help give function package name.package loaded, use ?package_name::function_name specify package help() function. sure package function , use shortcut ??function_name.Function help always organised way. example, look help ?stats::rnorm. top, tells name function package curly brackets, short description function, followed longer description. Usage section shows function arguments. arguments default values, shown like function(arg = default).Arguments section lists argument explanation. may Details section even detail functions. Examples section last, shows examples can run console window see function works.first argument mean function? trimna.rmmeanxWhat package read_excel ? readrreadxlbasestats","code":"\n# if the package is loaded\n?ggplot2\nhelp(\"ggplot2\")\n\n# works whether or not the package is loaded\n?ggplot2::ggplot\nhelp(\"ggplot\", package=\"ggplot2\") \n\n# shows a list of potentially matching functions\n??ggplot"},{"path":"intro.html","id":"tab-auto-complete","chapter":"2 Intro to R and RStudio","heading":"2.6.4 Tab auto-complete","text":"One useful feature R Studio tab auto-complete functions (see Figure 2.2). write name function press tab key, R Studio show arguments function takes along brief description. press enter argument name fill name , just like auto-complete phone. incredibly useful first learning R remember use feature frequently.\nFigure 2.2: Tab auto-complete\n","code":""},{"path":"intro.html","id":"objects","chapter":"2 Intro to R and RStudio","heading":"2.7 Objects","text":"large part coding involve creating manipulating objects. Objects contain stuff. stuff can numbers, words, result operations analyses. assign content object using <-.Run following code console, change values name age details change christmas holiday date care .see four objects now appear environment pane:name character (text) data. order R recognise character data, must enclosed double quotation marks \" \".age numeric data. order R recognise number, must enclosed quotation marks.today stores result function Sys.Date(). function returns computer system's date. Unlike name age, hard-coded (.e., always return values enter), contents object today change dynamically date. , run function tomorrow, update date tomorrow's date.christmas also date hard-coded specific date. wrapped within .Date() function tells R interpret character string provide date rather text.print contents object, type object's name console press enter. Try printing four objects now.Finally, key concept understand objects can interact can save results interactions new object. Edit run following code create new objects, print contents new object.","code":"\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2022-12-25\")\ndecade <- age + 10\nfull_name <- paste(name, \"Nordmann\")\nhow_long <- christmas - today"},{"path":"intro.html","id":"help","chapter":"2 Intro to R and RStudio","heading":"2.8 Getting help","text":"feel like need lot help starting learn. really go away; impossible memorise everything. goal learn enough structure R can look things quickly. introduce specialised jargon glossary; easier google \"convert character numeric R\" \"make numbers quotes actual numbers words\". addition function help described , additional resources use often.","code":""},{"path":"intro.html","id":"package-reference-manuals","chapter":"2 Intro to R and RStudio","heading":"2.8.1 Package reference manuals","text":"Start help browser entering help.start() console. Click \"Packages\" \"Reference\" see list packages. Scroll readxl package click see list functions available package.","code":""},{"path":"intro.html","id":"googling","chapter":"2 Intro to R and RStudio","heading":"2.8.2 Googling","text":"function help help, even sure function need, try Googling question. take practice able use right jargon search terms get want. helps put \"R\" \"tidyverse\" search text, name relevant package, like ggplot2.","code":""},{"path":"intro.html","id":"vignettes","chapter":"2 Intro to R and RStudio","heading":"2.8.3 Vignettes","text":"Many packages, especially tidyverse ones, helpful websites vignettes explaining use functions. vignettes also available inside R. can access package's help page vignette() function.","code":"\n# opens a list of available vignettes\nvignette(package = \"ggplot2\")\n\n# opens a specific vignette in the Help pane\nvignette(\"ggplot2-specs\", package = \"ggplot2\")"},{"path":"intro.html","id":"workshop-prep","chapter":"2 Intro to R and RStudio","heading":"2.9 Workshop set-up check","text":"Restart R session run code copying pasting console hitting enter. managed install update software packages required, run without issue produce histograms. produce messages look like errors involving stat_bin, worry, errors explain messages mean workshop.get error package called..., make sure installed packages listed Section 2.5.1.technical issues working machine get code run, please use RStudio Cloud workshop time troubleshoot installation problems.","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggthemes)\n\ndata(starwars)\n\nmass <- ggplot(starwars, aes(x = mass)) +\n  geom_histogram() +\n  theme_economist() +\n  labs(title = \"Star Wars\", \n       subtitle = \"Character Mass (Kg)\",\n       x = NULL, y = NULL)\n\nheight <- ggplot(starwars, aes(x = height)) +\n  geom_histogram() +\n  theme_economist() +\n  labs(subtitle = \"Character Height (cm)\",\n       x = NULL, y = NULL)\n\nmass + height"},{"path":"intro.html","id":"glossary-intro","chapter":"2 Intro to R and RStudio","heading":"2.10 Glossary","text":"","code":""},{"path":"intro.html","id":"resources-intro","chapter":"2 Intro to R and RStudio","heading":"2.11 Further Resources","text":"RStudio IDE CheatsheetRStudio Cloud","code":""},{"path":"day-1.html","id":"day-1","chapter":"3 Day 1","heading":"3 Day 1","text":"","code":""},{"path":"day-1.html","id":"projects","chapter":"3 Day 1","heading":"3.1 Organising a project","text":"write code, first, need get organised. Projects RStudio way group files need one project. projects include scripts, data files, output files like PDF report created script images.folder R look default find save files known working directory. can set working directory manually folder want work menu commands:Session > Set Working Directory > Choose Directory...However, better way organising files using Projects RStudio.","code":""},{"path":"day-1.html","id":"project-start","chapter":"3 Day 1","heading":"3.1.1 Start a Project","text":"create new project workshop:File > New Project...Name project workshop-datavizSave somewhere sensible computer.RStudio restart open new project directory working directory.\nFigure 3.1: Starting new project.\nClick Files tab lower right pane see contents project directory. see file called workshop-dataviz.Rproj, file contains project information. can double-click open project.Depending settings, may also see directory called .Rproj.user, contains specific user settings. can ignore \"invisible\" files start full stop.","code":""},{"path":"day-1.html","id":"rmarkdown","chapter":"3 Day 1","heading":"3.2 R Markdown","text":"workshop use R Markdown. time cover many features R Markdown incredibly powerful format allows create fully reproducible reports text, code, analysis contained within one document. can also use create websites, online books (like one), presentations, Shiny apps. like learn R Markdown, links additional resources Section 3.11.","code":""},{"path":"day-1.html","id":"new-document","chapter":"3 Day 1","heading":"3.2.1 New document","text":"open new R Markdown document click:File > New File > R MarkdownYou prompted give title; call document Day 1. can also change author name. Keep output format HTML.opened new document sure save clicking File > Save .... name file day_1 (Mac can see file extension, name day_1.Rmd). file automatically saved project folder, .e., working directory, now see file appear file viewer pane.first open new R Markdown document see bunch welcome text looks like :\nFigure 3.2: New R Markdown text\nfollowing steps:Change title \"Data viz workshop day 1\" author nameDelete everything setup chunkSkip line setup chunk type \"## Set-\" (hashes without quotation marks); make sure spaces hashes least one space hashes subtitleSkip line click insert new code menu (green box C plus sign) R","code":""},{"path":"day-1.html","id":"code-chunks","chapter":"3 Day 1","heading":"3.2.2 Code chunks","text":"created subtitle code chunk. R Markdown, anything written grey code chunk assumed code, anything written white space (code chunks) regarded normal text (actual colours depend theme applied, refer default white grey). makes easy combine text code one document.create new code chunk notice grey box starts ends three back ticks ```. One common mistake accidentally delete back ticks. Remember, code chunks text entry different colours - colour certain parts Markdown look right, check deleted back ticks.code chunk, write code load packages installed prep work.","code":"\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(ggthemes)"},{"path":"day-1.html","id":"running-code","chapter":"3 Day 1","heading":"3.2.3 Running code","text":"working R Markdown document, several ways run lines code.First, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run.First, can highlight code want run click Run -> Run Selected Line(s), however tedious can cause problems highlight exactly code want run.Alternatively, can press green \"play\" button top-right code chunk run lines code chunk.Alternatively, can press green \"play\" button top-right code chunk run lines code chunk.Even better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Even better learn keyboard short cuts R Studio. run single line code, make sure cursor line code want run (can anywhere) press ctrl + enter Cmd + enter Mac. want run code code chunk, press ctrl/cmd + shift + enter. Learn short cuts, make life easier!Run code using method 3. see packages load console.","code":""},{"path":"day-1.html","id":"loading-data","chapter":"3 Day 1","heading":"3.3 Loading data","text":"Broadly speaking three types data can load working R:Built-data sets come packages install useful reproducible demos. Common ones see Google help documentation mtcars diamonds.Data sets stored online accessed via URL.Data sets stored locally computer.session use 1 2 day 2 use 3.","code":""},{"path":"day-1.html","id":"built-in-data","chapter":"3 Day 1","heading":"3.3.1 Built-in data","text":"data() function lists data sets available.Type name data set console see data. example, type ?starwars console see dataset description starwars, data set included dplyr.can also use data() function load dataset global environment.can now use data. Insert new heading (##) named \"first plot\". underneath , create new code chunk, copy, paste, run code. may understand yet, end session.","code":"\n# list datasets built in to base R\ndata()\n\n# lists datasets in a specific package\ndata(package = \"dplyr\")\n?starwars\n# loads starwars into the environment\ndata(\"starwars\")\nggplot(starwars, aes(x = mass)) +\n  geom_histogram(colour = \"black\") +\n  theme_economist() +\n  labs(title = \"Mass of Star Wars characters\",\n       subtitle = \"Original trilogy\")"},{"path":"day-1.html","id":"loading-online","chapter":"3 Day 1","heading":"3.3.2 Online sources","text":"Now, try loading data stored online. Create code chunk document copy, paste, run code. code loads simulated customer satisfaction data.data stored .csv file going use read_csv() function load .Note url contained within double quotation marks - work without .get error message looks like:Error read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\") :\nfind function \"read_csv\"means loaded tidyverse. Check library(tidyverse) setup chunk run setup chunk.data simulated data call centre customer satisfaction survey. first thing need plot data get familiar rows (observations) columns (variables) mean. Sometimes obvious, sometimes requires help data provider. , row represents one call centre.caller_id unique ID calleremployee_id unique ID employee taking callscall_start date time call arrivedwait_time number seconds caller waitcall_time number seconds call lasted employee picked upissue_category whether issue tech, sales, returns, othersatisfaction customer satisfaction rating scale 1 (unsatisfied) 5 (satisfied)Create another heading (##) named \"second plot\", another code chunk , copy, paste, run code .","code":"\nsurvey_data <- read_csv(\"https://psyteachr.github.io/ads-v1/data/survey_data.csv\")\nggplot(survey_data, aes(x = call_time)) +\n  geom_histogram(colour = \"black\", fill = \"wheat\") +\n  theme_excel() +\n  labs(x = \"Time spent on call (seconds)\",\n       title = \"Customer calls\")"},{"path":"day-1.html","id":"rmd-knit","chapter":"3 Day 1","heading":"3.4 Knitting your file","text":"move focus visualisation, going knit, compile, file document type choosing. knit file click:Knit > Knit HMTLR Markdown create display new HTML document, also automatically save file working directory.can also knit typing following code console. Never put Rmd script , try knit infinite loop.time cover customise knitted output workshop, suffice say can control almost every aspect, whether code displayed hidden, size placement figures.work workshop, encourage use Markdown document take notes code output create complete single record work done. particular, use headings new code chunks separate tasks, () experience error, make note fixed .Ok, get started properly.","code":"\nrmarkdown::render(\"day_1.Rmd\")\n\n# alternatively, you can use this, but may get a warning\nknitr::knit2html(\"day_1.Rmd\")"},{"path":"day-1.html","id":"building-plots","chapter":"3 Day 1","heading":"3.5 Building plots","text":"multiple approaches data visualisation R; workshop use popular package ggplot2, part larger tidyverse collection packages. grammar graphics (\"gg\" \"ggplot\") standardised way describe components graphic. ggplot2 uses layered grammar graphics, plots built series layers. may helpful think picture multiple elements sit semi-transparently . good analogy old Disney movies artists create background add moveable elements top background via transparencies.Figure 3.3 displays evolution simple scatterplot using layered approach. First, plot space built (layer 1); variables specified (layer 2); type visualisation (known geom) desired variables specified (layer 3) - case geom_point() called visualise individual data points; second geom added include line best fit (layer 4), axis labels edited readability (layer 5), finally, theme applied change overall appearance plot (layer 6).\nFigure 3.3: Evolution layered plot\nImportantly, layer independent independently customisable. example, size, colour position component can adjusted, one , example, remove first geom (data points) visualise line best fit, simply removing layer draws data points (Figure 3.4). use layers makes easy build complex plots step--step, adapt extend plots existing code.\nFigure 3.4: Final plot scatterplot layer removed.\n","code":""},{"path":"day-1.html","id":"plot-setup","chapter":"3 Day 1","heading":"3.6 Plot setup","text":"","code":""},{"path":"day-1.html","id":"plot-setup-data","chapter":"3 Day 1","heading":"3.6.1 Data","text":"Every plot starts ggplot() function data table. data loaded typo code, give error message. best check plot step, can figure errors easily.\nFigure 3.5: blank ggplot.\n","code":"\nggplot(data = survey_data)"},{"path":"day-1.html","id":"mapping","chapter":"3 Day 1","heading":"3.6.2 Mapping","text":"next argument ggplot() mapping. tells plot columns data represented , \"mapped\" , different aspects plot, x-axis, y-axis, line colour, object fill, line style. aspects, \"aesthetics\", listing inside aes() function.Set arguments x y names columns want plotted axes. , want plot wait time x-axis call time y-axis.\nFigure 3.6: blank plot x- y- axes mapped.\nexample , wrote names arguments data mapping, practice, almost everyone omits . Just make sure put data mapping right order.","code":"\n# set up the plot with mapping\nggplot(\n  data = survey_data, \n  mapping = aes(x = wait_time, y = call_time)\n)\nggplot(survey_data,  aes(wait_time, call_time))"},{"path":"day-1.html","id":"geoms","chapter":"3 Day 1","heading":"3.6.3 Geoms","text":"Now can add plot elements layers. referred geoms functions start geom_. add layers onto base plot created ggplot() plus (+).\nFigure 3.7: Adding scatterplot geom_point().\nSomewhat annoyingly, plus end previous line, start next line. make mistake, run first line code produce base layer get following error message rather adding geom_point().","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() # scatterplot\nggplot(survey_data, aes(x = wait_time, y = call_time))\n+ geom_point() # scatterplot## Error:\n## ! Cannot use `+.gg()` with a single argument. Did you accidentally put + on a new line?"},{"path":"day-1.html","id":"multiple-geoms","chapter":"3 Day 1","heading":"3.6.4 Multiple geoms","text":"Part power ggplot2 can add one geom plot adding extra layers quickly becomes possible make complex informative visualisations. Importantly, layers display order set . code uses geoms produce scatterplot line best fit orders differently.\nFigure 3.8: Points first versus line first.\n","code":"\n# Points first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n\n# Line first\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot"},{"path":"day-1.html","id":"saving-plots","chapter":"3 Day 1","heading":"3.6.5 Saving plots","text":"Just like can save numbers data tables objects, can also save output ggplot(). code produces plots created saves objects named point_first line_first. run code, plots display like done . Instead, see object names appear environment pane.view plots, call objects name. output plot separately.","code":"\npoint_first <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point() + # scatterplot\n  geom_smooth(method = lm) # line of best fit\n  \nline_first <-\n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_smooth(method = lm) + # line of best fit\n  geom_point() # scatterplot\npoint_first # view first plot\nline_first # view second plot"},{"path":"day-1.html","id":"combining-plots","chapter":"3 Day 1","heading":"3.6.6 Combining plots","text":"One reasons save plots objects can combine multiple plots using functions patchwork package. code produces plot combining two plots + specifying want plots produced single row nrow argument plot_layout().\nFigure 3.9: Combining plots patchwork.\n","code":"\n# add plots together in 1 row; try changing nrow to 2\npoint_first + line_first + plot_layout(nrow = 1)"},{"path":"day-1.html","id":"customising-plots","chapter":"3 Day 1","heading":"3.7 Customising plots","text":"","code":""},{"path":"day-1.html","id":"format-axes","chapter":"3 Day 1","heading":"3.7.1 Format axes","text":"Now need make axes look neater. several functions can use change axis labels, powerful ones scale_ functions. need use scale function matches data plotting axis becomes particularly important know type data working . axes continuous, use scale_x_continuous() scale_y_continuous().name argument changes axis label. breaks argument sets major units needs vector possible values, can extend beyond range data (e.g., wait time goes 350, can specify breaks 600 case wanted reuse code new data different values). seq() function creates sequence numbers one another specified steps.\nFigure 3.10: Formatting plot axes scale_ functions.\nCheck help ?scale_x_continuous see set minor units specify many breaks want instead.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30))"},{"path":"day-1.html","id":"axis-limits","chapter":"3 Day 1","heading":"3.7.2 Axis limits","text":"want change minimum maximum values axis, use coord_cartesian() function. Many plots make sense minimum maximum values represent range possible values, even values present data. , wait call times less 0 seconds, set minimum values 0 maximum values first break highest value.\nFigure 3.11: Changing axis limits.\ncan also set limits argument inside scale_ functions, actually removes data falls outside limits, rather cropping plot, can change appearance certain types plots like violin plots density plots.","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(colour = \"dodgerblue\", \n             alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180))"},{"path":"day-1.html","id":"themes","chapter":"3 Day 1","heading":"3.7.3 Themes","text":"ggplot2 comes several built-themes, theme_minimal() theme_bw(), ggthemes package provides even themes match different software, GoogleDocs Stata, publications, Economist Wall Street Journal. add GoogleDocs theme, change font size 18 base_size argument.also worth highlighting code starting look quite complicated number layers, built slowly (hopefully!) make sense. see examples ggplot2 code online like adapt, build plot layer layer make easier understand layer adds.\nFigure 3.12: Changing theme.\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) + \n  geom_smooth(method = lm, \n              formula = y~x, \n              colour = rgb(0, .5, .8)) +\n  scale_x_continuous(name = \"Wait Time (seconds)\", \n                     breaks = seq(from = 0, to = 600, by = 60)) +\n  scale_y_continuous(name = \"Call time (seconds)\",\n                     breaks = seq(from = 0, to = 600, by = 30)) +\n  coord_cartesian(xlim = c(0, 360), \n                  ylim = c(0, 180)) +\n  ggthemes::theme_gdocs(base_size = 18)"},{"path":"day-1.html","id":"appropriate-plots","chapter":"3 Day 1","heading":"3.8 Appropriate plots","text":"Now know build plot layers customise appearance, ready learn plot types. Different types data require different types plots, section organised data type.ggplot2 cheat sheet great resource help find plots appropriate data, based many variables plotting type . examples use customer satisfaction data, plot communicates something different.expect memorise plot types methods customising , helpful try code examples , changing values test understanding.","code":""},{"path":"day-1.html","id":"counting-categories","chapter":"3 Day 1","heading":"3.8.1 Counting categories","text":"","code":""},{"path":"day-1.html","id":"bar-plot","chapter":"3 Day 1","heading":"3.8.1.1 Bar plot","text":"want count number things per category, can use geom_bar(). need provide x mapping geom_bar() default geom_bar() uses number observations group x value y, need tell put y-axis.","code":"\nggplot(survey_data, aes(x = issue_category)) +\n  geom_bar()"},{"path":"day-1.html","id":"one-continuous-variable","chapter":"3 Day 1","heading":"3.8.2 One continuous variable","text":"continuous variable, like number seconds callers wait, can use geom_histogram() geom_density() show distribution. Just like geom_bar() required specify x variable.","code":""},{"path":"day-1.html","id":"histogram","chapter":"3 Day 1","heading":"3.8.2.1 Histogram","text":"histogram splits data \"bins\" along x-axis shows count many observations bin along y-axis.\nFigure 3.13: Histogram wait times.\nalways set binwidth number bins something meaningful data (otherwise get annoying message). might need try options find something looks good conveys meaning plot -- try changing values binwidth bins see works best.default, bars start centered 0, binwidth set 15, first bar include -7.5 7.5 seconds, make much sense. can set boundary = 0 bar represents increments 15 seconds starting 0.Finally, default style grey bars ugly, can change setting fill colour, well using scale_x_continuous() update axis labels.\nFigure 3.14: Histogram custom styles.\n","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n# adjust width of each bar\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15)\n\n# adjust number of bars\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(bins = 5)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, boundary = 0)\nggplot(survey_data, aes(x = wait_time)) +\n  geom_histogram(binwidth = 15, \n                 boundary = 0, \n                 fill = \"white\", \n                 color = \"black\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60))"},{"path":"day-1.html","id":"frequency-plot","chapter":"3 Day 1","heading":"3.8.2.2 Frequency plot","text":"Rather plotting bin bar, can connect line across top bin using frequency plot. function geom_freqpoly() works geom_histogram(), except take fill argument just line.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_freqpoly(boundary = 0, binwidth = 15, \n                color = \"black\")"},{"path":"day-1.html","id":"density-plot","chapter":"3 Day 1","heading":"3.8.2.3 Density plot","text":"distribution smooth, density plot often better way show distribution. density plot need binwidth boundary arguments split data bins, can fill.","code":"\nggplot(survey_data, aes(x = wait_time)) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  geom_density(fill = \"purple\", color = \"black\")"},{"path":"day-1.html","id":"grouped-continuous-variables","chapter":"3 Day 1","heading":"3.8.3 Grouped continuous variables","text":"several ways compare continuous data across groups. choose depends point trying make plot.","code":""},{"path":"day-1.html","id":"subdividing-distributions","chapter":"3 Day 1","heading":"3.8.3.1 Subdividing distributions","text":"previous plots, used fill purely visual reasons, e.g., changed colour histogram bars make look nicer. However, can also use fill represent another variable colours become meaningful.Setting fill aesthetic mapping produce different coloured bars category fill variable, case issue_category.\nFigure 3.15: Histogram categories represented fill.\ndefault, categories positioned stacked top . function geom_area() gives similar effect stat = \"bin\".\nFigure 3.16: Stacked area plot.\n","code":"\nggplot(survey_data, aes(x = wait_time, fill = issue_category)) +\n  geom_histogram(boundary = 0, \n                 binwidth = 15,\n                 color = \"black\")\n# area plot\nggplot(survey_data, mapping = aes(x = wait_time, fill = issue_category)) +\n  geom_area(stat = \"bin\", \n            boundary = 0, \n            binwidth = 15, \n            color = \"black\")"},{"path":"day-1.html","id":"comparing-distributions","chapter":"3 Day 1","heading":"3.8.3.2 Comparing distributions","text":"want compare one distribution, can set position argument geom_histogram() \"dodge\" put bars group next instead stacking . However, can look confusing several categories. Instead, usegeom_freqpoly() plot line connecting top bin.\nFigure 3.17: Different ways plot distribution continuous variable multiple groups.\n","code":"\n# dodged histogram\nhistogram_dodge <- \n  ggplot(survey_data, aes(x = wait_time, \n                          fill = issue_category,\n                          colour = issue_category))+\n  geom_histogram(boundary = 0, \n                 binwidth = 15, \n                 position = \"dodge\") +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Dodged Histogram\")\n\n# frequency plot\nfreqpoly_plot <- \n  ggplot(survey_data, aes(x = wait_time,\n                          fill = issue_category,\n                          colour = issue_category)) +\n  geom_freqpoly(binwidth = 15, \n                boundary = 0,\n                size = 1) +\n  scale_x_continuous(name = \"Wait time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  ggtitle(\"Frequency\")\n\n# put plots together\nhistogram_dodge + freqpoly_plot + \n  plot_layout(nrow = 1, guides = \"collect\") # collects the legends together, try removing this"},{"path":"day-1.html","id":"violin-plot","chapter":"3 Day 1","heading":"3.8.3.3 Violin plot","text":"Another way compare groups continuous variables violin plot. like density plot, rotated 90 degrees mirrored - fatter violin, larger proportion data points value.\nFigure 3.18: Violin-plot.\n","code":"\nggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n  geom_violin()"},{"path":"day-1.html","id":"boxplot","chapter":"3 Day 1","heading":"3.8.3.4 Boxplot","text":"Boxplots serve similar purpose violin plots. show shape distribution, rather statistics . middle line represents median; half data line half . box encloses 25th 75th percentiles data, 50% data falls inside box. \"whiskers\" extending box extend 1.5 times height box, although can change coef argument. points show outliers -- individual data points fall outside range.\nFigure 3.19: Basic boxplot.\n","code":"\nggplot(survey_data, aes(x = issue_category, y = wait_time)) +\n geom_boxplot()"},{"path":"day-1.html","id":"combo-plots","chapter":"3 Day 1","heading":"3.8.3.5 Combo plots","text":"Violin plots frequently layered geoms represent mean median values data. lot code, help understanding ) run layer layer see builds b) change values throughout code\nFigure 3.20: Violin plots combined different methods represent means medians.\n","code":"\n# add fill and colour to the mapping\n\nggplot(survey_data,  aes(x = issue_category, \n                         y = wait_time,\n                         fill = issue_category,\n                         colour = issue_category)) +\n  scale_x_discrete(name = \"Issue Category\") +\n  scale_y_continuous(name = \"Wait Time (seconds)\",\n                     breaks = seq(0, 600, 60)) +\n  coord_cartesian(ylim = c(0, 360)) +\n  guides(fill = \"none\", colour = \"none\") + \n  # add a line at median (50%) score\n  geom_violin(alpha = 0.4, \n              draw_quantiles = 0.5) + \n  # add a boxplot\n  geom_boxplot(width = 0.25, \n               fill = \"white\", \n               alpha = 0.75, \n               outlier.alpha = 0) + \n  # add a point that represents the mean\n  stat_summary(fun = mean, \n               geom = \"point\", \n               size = 2) + \n  ggtitle(\"ViolinBox\")"},{"path":"day-1.html","id":"two-continuous-variables","chapter":"3 Day 1","heading":"3.8.4 Two continuous variables","text":"want see two continuous variables related, set one x-axis y-axis. Usually, one variable causes , plot cause x-axis effect y-axis. , want see longer wait times cause calls longer.","code":""},{"path":"day-1.html","id":"scatterplot","chapter":"3 Day 1","heading":"3.8.4.1 Scatterplot","text":"function create scatterplot called geom_point().\nFigure 3.21: Scatterplot geom_point().\n","code":"\nggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point()"},{"path":"day-1.html","id":"trendlines","chapter":"3 Day 1","heading":"3.8.4.2 Trendlines","text":"Figure 3.3, emphasised relationship wait time call time trendline created geom_smooth() using argument method = lm (\"lm\" stands \"linear model\" straight line relationship). can also set method = loess visualise non-linear relationship.\nFigure 3.22: Different ways show relationship two continuous variables.\nmuch data extremes x-axis, curve can uncertain. represented wider shaded area, means true relationship might anywhere within area. Add argument se = FALSE geom_smooth() remove \"standard error\" shading.","code":"\nlm_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = lm, formula = y~x) +\n  ggtitle(\"method = lm\")\n\nloess_plot <- \n  ggplot(survey_data, aes(x = wait_time, y = call_time)) +\n  geom_point(alpha = 0.2) +\n  geom_smooth(method = loess, formula = y~x) +\n  ggtitle(\"method = loess\")\n\nlm_plot + loess_plot"},{"path":"day-1.html","id":"ordinal-variables","chapter":"3 Day 1","heading":"3.8.5 Ordinal variables","text":"limited range numeric values, ordinal rating scale, sometimes overlapping data makes difficult see going point plot. example, plot shows satisfaction ratings call time ratings 1, 2, 3, 4 5, makes hard see exactly many data points point.section, explore options dealing .\nFigure 3.23: Overlapping data.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) + \n  geom_point()"},{"path":"day-1.html","id":"jitter-plot","chapter":"3 Day 1","heading":"3.8.5.1 Jitter plot","text":"can use geom_jitter() move points around bit make easier see. can also set alpha transparency. , x-axis continuous, need jitter width, y-axis ordinal categories, height jittered -0.2 +0.2 away true y-value. can help play around values understand jitter .\nFigure 3.24: Jitter plot.\n","code":"\nggplot(survey_data, aes(x = call_time, y = satisfaction)) +\n  geom_jitter(width = 0, height = .2, alpha = 0.5)"},{"path":"day-1.html","id":"facets","chapter":"3 Day 1","heading":"3.8.5.2 Facets","text":"Alternatively, can use facet_wrap() create separate plot level satisfaction. facet_wrap() uses tilde (~) symbol, can roughly translate \"\", e.g., facet plot satisfaction rating. labeller function controls labels plot. label_both specifies want variable name (satisfaction) value (e.g., 1) printed plot make easier read.\nFigure 3.25: histogram facets.\n, means, plot types can make R. chapter just gave basic overview. resources section end chapter lists many resources, R Graph Gallery especially useful one get inspiration kinds beautiful plots can make R.","code":"\nggplot(survey_data, aes(x = call_time)) +\n  geom_histogram(binwidth = 10, \n                 boundary = 0, \n                 fill = \"dodgerblue\", \n                 color = \"black\") +\n  facet_wrap(~satisfaction, \n             ncol = 1, # try changing this to 2 \n             labeller = label_both) +\n  scale_x_continuous(name = \"Call Time (seconds)\",\n                     breaks = seq(0, 600, 30))"},{"path":"day-1.html","id":"exercises","chapter":"3 Day 1","heading":"3.9 Exercises","text":"consolidate learned session, use built-starwars data set create following:histogram heightsA scatterplot height v mass line best fitA bar chart counts genderThen use built-ingss_cat data set create:grouped density plot age marital statusA frequency plot age marital statusA violin-boxplot age marital statusFinally, pick two favourite plots , spend time adjusting aesthetics (colours, themes, labels etc.), combine using patchwork. Twitter, share #PsyTeachR tag (emilynordmann?) (wtoivo1?).","code":"\n# load data\ndata(\"starwars\")\n\n# histogram\nggplot(starwars, aes(x = height)) +\n  geom_histogram()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 6 rows containing non-finite values (stat_bin).\n# scatterplot\nggplot(starwars, aes(x = height, y = mass)) +\n  geom_point() +\n  geom_smooth()## `geom_smooth()` using method = 'loess' and formula 'y ~ x'## Warning: Removed 28 rows containing non-finite values (stat_smooth).## Warning: Removed 28 rows containing missing values (geom_point).\n# bar chart\nggplot(starwars, aes(x = gender)) +\n  geom_bar()\n# load data\ndata(\"gss_cat\")\n\n# grouped density\nggplot(gss_cat, aes(x = age, fill = marital)) +\n  geom_density(alpha = .6)## Warning: Removed 76 rows containing non-finite values (stat_density).\n# frequency plot\nggplot(gss_cat, aes(x = age, colour = marital)) +\n  geom_freqpoly()## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`.## Warning: Removed 76 rows containing non-finite values (stat_bin).\n# violin-boxplot\nggplot(gss_cat, aes(x = marital, y = age)) +\n  geom_violin() +\n  geom_boxplot(width = .2)## Warning: Removed 76 rows containing non-finite values (stat_ydensity).## Warning: Removed 76 rows containing non-finite values (stat_boxplot)."},{"path":"day-1.html","id":"glossary-day1","chapter":"3 Day 1","heading":"3.10 Glossary","text":"","code":""},{"path":"day-1.html","id":"resources-viz","chapter":"3 Day 1","heading":"3.11 Further Resources","text":"R Markdown Cheat Sheetggplot2 cheat sheet.\nR Markdown TutorialR Markdown: Definitive Guide Yihui Xie, J. J. Allaire, & Garrett GrolemundChapter 27: R Markdown R Data ScienceProject Structure Danielle Navarro","code":""},{"path":"glossary.html","id":"glossary","chapter":"A Glossary","heading":"A Glossary","text":"can use glossary() function automatically link term psyTeachR glossary make project-specific glossary.create link glossary include tooltip short definition hover term. Use following syntax inline r: glossary(\"word\"). example, common data types integer, double, character.need link definition, using different form word, add display version second argument (display). can also override automatic short definition providing third argument (def). Add argument link = FALSE just want hover definition link psyTeachR glossary.[1] \"Data Types\"can add glossary table end chapter following code. creates table terms used chapter previous glossary_table() function. uses kableExtra(), use code chunk, set results='asis'.want contribute glossary, fork github project, add terms submit pull request, suggest new term issues page.","code":"\nglossary(\"data type\", \n         display = \"Data Types\", \n         def = \"My custom definition of data types\", \n         link = FALSE)```{r, echo=FALSE, results='asis'}\nglossary_table()```"},{"path":"license.html","id":"license","chapter":"License","heading":"License","text":"book licensed Creative Commons Attribution-ShareAlike 4.0 International License (CC--SA 4.0). free share adapt book. must give appropriate credit (DeBruine, 2021), provide link license, indicate changes made. adapt material, must distribute contributions license original.","code":""},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
